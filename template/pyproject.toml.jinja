# {#- -*- mode: toml; -*- -#}
#:schema https://json.schemastore.org/pyproject.json
# ref: <https://packaging.python.org/en/latest/specifications/pyproject-toml/>

[project]
name = "{{ package_name }}"
description = ""
readme = "README.md"
requires-python = ">=3.12"
license = "{{ license }}"
authors = [{ name = "{{ author_name }}", email = "{{ author_email }}" }]
keywords = []
classifiers = [
  # ref: <https://pypi.org/classifiers/>
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
]
dependencies = ["lazy-loader>=0.4,<0.5", "loguru>=0.7,<0.8"]
dynamic = ["version"]

[project.urls]
# ref: <https://packaging.python.org/en/latest/specifications/well-known-project-urls/#well-known-labels>
"Changelog" = "https://github.com/{{ github_user }}/{{ github_repo }}/blob/main/CHANGELOG.md"
"Documentation" = "https://{{ github_user }}.github.io/{{ github_repo }}/"
"Funding" = "https://github.com/{{ github_user }}/{{ github_repo }}?sponsor=1"
"Homepage" = "https://github.com/{{ github_user }}/{{ github_repo }}"
"Issue Tracker" = "https://github.com/{{ github_user }}/{{ github_repo }}/issues"
"Release Notes" = "https://github.com/{{ github_user }}/{{ github_repo }}/releases"
"Source Code" = "https://github.com/{{ github_user }}/{{ github_repo }}"

[dependency-groups]
build = ["check-wheel-contents>=0.6,<0.7", "hatch>=1,<2", "twine>=6,<7"]
dev = ["icecream>=2,<3"]
docs = ["liblaf-mkdocs-preset>=0.2,<0.3", "mkdocs>=1,<2"]
test = ["liblaf-pytest-preset>=0.1,<0.2", "pytest>=8,<9"]

[build-system]
requires = ["hatch-vcs", "hatchling"]
build-backend = "hatchling.build"

[tool.check-wheel-contents]
ignore = ["W002"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.hatch.build.hooks.vcs]
version-file = "src/{{ package_dir }}/_version.py"

[tool.hatch.build.targets.sdist]
only-include = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/{{ wheel_package_dir }}"]

[tool.hatch.version]
source = "vcs"

# %% if package_manager == "pixi":
[tool.pixi.environments]
default = { features = ["build", "dev", "docs", "test"] }

[tool.pixi.project]
channel-priority = "disabled"
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
"{{ package_name }}" = { editable = true, path = "." }

[tool.pixi.system-requirements]
cuda = "12"
libc = { family = "glibc", version = "2.42" }
linux = "6.12"
# %% endif

[tool.pyright]
exclude = ["**/.*", "**/__pycache__", "**/marimo", "**/node_modules"]
extends = ".config/linters/pyrightconfig.json"

[tool.pytest.ini_options]
addopts = [
  "--doctest-modules",
  "--hypothesis-show-statistics",
  "--showlocals",
  "--strict-config",
  "--strict-markers",
]
testpaths = ["benches", "src", "tests"]

[tool.ruff]
extend = ".config/linters/.ruff.toml"

# %% if package_manager == "uv":
[tool.uv]
default-groups = "all"
# %% endif
