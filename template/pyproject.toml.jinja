# {#- -*- mode: toml; -*- -#}
#:schema https://json.schemastore.org/pyproject.json
# ref: <https://packaging.python.org/en/latest/specifications/pyproject-toml/>

[project]
authors = [{ email = "{{ author_email }}", name = "{{ author_name }}" }]
classifiers = [
  # common classifiers
  # ref: <https://pypi.org/classifiers/>
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "License :: OSI Approved",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python",
  "Typing :: Typed",
]
dependencies = ["lazy-loader", "loguru"]
description = "TODO"
dynamic = ["version"]
keywords = []
license = "{{ license }}"
name = "{{ package_name }}"
readme = "README.md"
requires-python = ">=3.12"

[project.urls]
"Changelog" = "https://github.com/{{ github_user }}/{{ github_repo }}/blob/main/CHANGELOG.md"
"Documentation" = "https://{{ github_user }}.github.io/{{ github_repo }}/"
"Funding" = "https://github.com/{{ github_user }}/{{ github_repo }}?sponsor=1"
"Homepage" = "https://github.com/{{ github_user }}/{{ github_repo }}"
"Issue Tracker" = "https://github.com/{{ github_user }}/{{ github_repo }}/issues"
"Release Notes" = "https://github.com/{{ github_user }}/{{ github_repo }}/releases"
"Source Code" = "https://github.com/{{ github_user }}/{{ github_repo }}"

[dependency-groups]
build = ["check-wheel-contents", "hatch", "twine"]
dev = ["icecream"]
docs = [
  "docstring-inheritance",
  "griffe-fieldz",
  "griffe-generics",
  "griffe-inherited-docstrings",
  "griffe-modernized-annotations",
  "griffe-pydantic",
  "griffe-warnings-deprecated",
  "mdx-truly-sane-lists",
  "mkdocs",
  "mkdocs-api-autonav",
  "mkdocs-autorefs",
  "mkdocs-git-committers-plugin-2",
  "mkdocs-git-revision-date-localized-plugin",
  "mkdocs-include-markdown-plugin",
  "mkdocs-material[imaging]",
  "mkdocs-section-index",
  "mkdocstrings",
  "mkdocstrings-python",
  "pymdown-extensions",
  "ruff",
]
test = ["hypothesis", "pytest", "pytest-codspeed", "pytest-cov", "pytest-xdist"]

[build-system]
requires = ["hatch-vcs", "hatchling"]
build-backend = "hatchling.build"

[tool.check-wheel-contents]
ignore = ["W002"]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.hatch.build.hooks.vcs]
version-file = "src/{{ package_dir }}/_version.py"

[tool.hatch.build.targets.sdist]
only-include = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/{{ wheel_package_dir }}"]

[tool.hatch.version]
source = "vcs"

# %% if package_manager == "pixi":
[tool.pixi.environments]
default = { features = ["build", "dev", "docs", "test"] }

[tool.pixi.project]
channel-priority = "disabled"
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
"{{ package_name }}" = { editable = true, path = "." }

[tool.pixi.system-requirements]
cuda = "12"
libc = { family = "glibc", version = "2.42" }
linux = "6.12"
# %% endif

[tool.pyright]
exclude = ["**/.*", "**/__pycache__", "**/marimo", "**/node_modules"]
extends = ".config/linters/pyrightconfig.json"

[tool.pytest.ini_options]
addopts = ["--showlocals", "--strict-config", "--strict-markers"]
testpaths = ["benches", "tests"]

[tool.ruff]
extend = ".config/linters/.ruff.toml"

# %% if package_manager == "uv":
[tool.uv]
default-groups = "all"
# %% endif
